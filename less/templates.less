.device-list {

	max-width: 300px;

	// border: 1px solid @cool-gray-2;
	// margin: 10px;
	// // max-width: 320px;
	// border-radius: @border-radius;
	overflow: hidden;

}

.device-list-item {

	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: space-between;
	width: 100%;
	min-width: 300px;
	padding: 15px;

	cursor: pointer;

	.left, .right {

		display: flex;
		flex-direction: row;
		align-items: center;
		overflow: visible;
		position: relative;

	}

	.checkmark-container {

		// Disable pointer events so toggleAction won't be triggered twice
		pointer-events: none;

	}

	span {

		margin-left: 15px;

	}

	.right {

		.lights-device-icon {

			width: @status-symbol-size;
			height: @status-symbol-size;

			margin-right: @status-symbol-size / 2;

			background-image: url('/static/img/icons/lights-icon-10px.svg');
			background-size: contain;

			display: inline-block;

			transform: scale3d(0, 0, 0);

			transition: all 0.3s ease;
		}

		.status {

			width: @status-symbol-size;
			height: @status-symbol-size;
			background-color: @red;

			border-radius: 1000px;

			display: inline-block;

			transition: all 0.3s ease;

		}

	}

	&.lights-device{

		.lights-device-icon {

			transform: scale3d(1, 1, 1);
			
		}

	}

	&.connected {

		.status {

			background-color: @green;

		}

	}

}

.device-naming-list {

	min-width: 300px;
	position: relative;

	border-radius: @border-radius;
	border: 1px solid @cool-gray-2;

	.device-naming-list-item {

		width: 100%;
		border-bottom: 1px solid @cool-gray-2;

		background-color: rgba(255, 255, 255, 0.05);

		&:last-child {

			border-bottom: none;

		}

		input {

			width: 100%;
			background-color: transparent;
			border: none;
			color: @text-color;
			padding: 15px;

		}

	}

}

.device-reprogramming-list-item {

	cursor: initial;

	transition: all 0.3s ease;

	.checkmark {

		transform: scale3d(0, 0, 0);

		transition: all 0.3s ease;
	}

	.name {

		transform: translate3d(-30px, 0, 0);

		transition: all 0.3s ease;

	}

	.message {

		display: block;
		position: absolute;

		left: 25px;
		bottom: -8px;

		width: 190px;

		font-size: 10px;

		color: @cool-gray-3;

		opacity: 0;

		transition: all 0.3s ease;

	}

	@stroke-length: 90px;
	@stroke-length-reprogramming: 20px;
	@stroke-length-connecting: 40px;

	.processing {

		width: 25px;
		height: 25px;

		position: absolute;

		top: 0;
		left: 0;

		overflow: visible;

		svg {

			overflow: visible;

		}

		.circle {

			stroke: @text-color;
			stroke-width: 1px;
			stroke-dasharray: @stroke-length;
			stroke-dashoffset: @stroke-length;

			overflow: visible;

			fill: none;

			transform-origin: 50% 50%;

			// animation: rotate 1s linear infinite;
			transition: all 0.3s ease;

		}

	}

	&.reprogramming{

		.processing {

			overflow: visible;

			.circle {

				// stroke-width: 2px;
				stroke-dashoffset: @stroke-length - @stroke-length-reprogramming;
				animation: rotate 1s linear infinite;

			}

		}

		.checkmark {

			transform: scale3d(1, 1, 1);

		}

		.name {

			transform: translate3d(0, -8px, 0);

		}

		.flashing {

			opacity: 1;

		}

	}

	&.connecting {

		.processing {

			overflow: visible;

			.circle {

				// stroke-width: 2px;
				stroke: @bright-blue-2;
				stroke-dashoffset: @stroke-length - @stroke-length-connecting;
				animation: rotate .5s linear infinite;

			}

		}

		.name {

			transform: translate3d(0, -8px, 0);

		}

		.flashing {

			opacity: 0;
			
		}

		.flash-successful {

			opacity: 1;

		}

	}

	&.lights-device {

		.color-rgba(@green-raw, 0.1);

		&.connected{

			background-color: @rgba;

			.checkmark {

				transform: scale3d(1, 1, 1);

			}

			.name {

				transform: translate3d(0, 0, 0);

			}

			.circle {

				stroke-width: 0px;

			}

		}

	}

	&.flash-failed {

		.color-rgba(@red-raw, 0.1);

		background-color: @rgba;

		.name {

			transform: translate3d(0, -8px, 0);

		}

		.flash-failed.message {

			opacity: 1;

		}

	}

}

.toggle {

	@toggle-height: 25px;
	@toggle-width: 40px;
	@margin: 1px;
	@toggle-animation-speed: all 0.35s;
	@toggle-animation-speed-ease: @toggle-animation-speed ease;
	@toggle-animation-speed-cubic: @toggle-animation-speed cubic-bezier(.49,.01,.35,1.28);

	position: relative;

	width: @toggle-width;
	height: @toggle-height;
	background-color: @blue-2;
	display: inline-block;

	border-radius: 1000px;

	transition: @toggle-animation-speed;

	.toggle-state {

		position: absolute;

		width: @toggle-height - (@margin * 2);
		height: @toggle-height - (@margin * 2);
		background-color: #FFF;
		box-sizing: border-box;
		top: @margin;
		left: @margin;

		box-shadow: 0 5px 5px rgba(0, 0, 0, 0.2);

		border-radius: 1000px;

		transition: @toggle-animation-speed-cubic;

	}

	.toggle-fill {

		position: absolute;
		top: @margin;
		left: @margin;
		border-radius: 1000px;

		background-color: @blue-0;
		width: @toggle-width - (@margin * 2);
		height: @toggle-height - (@margin * 2);

		transform-origin: unit((@toggle-width - (@toggle-height / 2)) / @toggle-width * 100, %) 50%;

		transition: @toggle-animation-speed;

	}

	&.checked {

		background-color: @green;

		.toggle-state {

			transform: translate3d(~"calc(@{toggle-width} - @{toggle-height})", 0, 0);
		}

		.toggle-fill {

			transform: scale3d(0, 0, 0);

		}

	}

}

.checkmark-container {
	@width: 25px;
	width: @width;
	height: @width;

	position: relative;

	padding: 5px;

	border-radius: 1000px;

	border: 1px solid @cool-gray-2;

	display: flex;
	align-items: center;
	justify-content: center;

	background-color: transparent;

	cursor: pointer;

	&::after {

		content: '';
		background-color: @cool-gray-2;
		position: absolute;
		top: -1px;
		right: -1px;
		bottom: -1px;
		left: -1px;
		border-radius: 1000px;
		// z-index: -1;

		transform: scale3d(0, 0, 0);

		transition: all 0.3s cubic-bezier(.38,0,.25,1);
	}

	.checkmark {

		display: block;
		width: 100%;

		overflow: visible;
		z-index: 1;

		.line {

			@dash-length: 16px;

			fill: transparent;
			stroke: @blue-3;
			stroke-width: 1px;
			stroke-dasharray: @dash-length @dash-length;
			stroke-dashoffset: @dash-length + 1px;
			stroke-linecap: round;

			fill: transparent;
			stroke: @blue-3;
			stroke-width: 1px;

			transition: all 0.3s cubic-bezier(.38,0,.25,1);
			transition-delay: 0s;

		}

	}

}

.checkmark-container.checked {
	@width: 25px;
	width: @width;
	height: @width;

	padding: 5px;

	border-radius: 1000px;

	display: flex;
	align-items: center;
	justify-content: center;

	&::after {

		transform: scale3d(1, 1, 1);

	}

	.checkmark {

		.line {

			stroke-dashoffset: 0;
			transition-delay: 0.2s;

		}

	}

}

@keyframes rotate {

	0% {

		transform: rotate3d(0, 0, 1, 0deg)

	}

	100% {

		transform: rotate3d(0, 0, 1, 360deg)

	}

}

@keyframes show-short {

	0% {

		opacity: 0;

	}

	10% {

		opacity: 1;

	}

	90% {

		opacity: 1;
		
	}

}

@keyframes hide-short {

	0% {

		opacity: 1;

	}

	10% {

		opacity: 0;

	}

	90% {

		opacity: 0;
		
	}

}